 @*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Registrar";
    Layout = "~/Views/Shared/NoLayout.cshtml";
    int? max = 0;
    int successValue = (int)ViewData["Success"];
}
@using Basecode.Data
@using Basecode.Data.ViewModels
@model ChildSubjectGrades
<link rel="stylesheet" href="/css/TableInfo.css" />
<link href="~/css/BackButton.css" rel="stylesheet" />
<div class="wrapper">
    @await Html.PartialAsync("./_TeacherSideBar")
    <div class="main p-4" style="height:400px; overflow-y: auto;">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item" aria-current="page"><a asp-action="index">Home</a></li>
                <li class="breadcrumb-item" aria-current="page"><a asp-action="StudentList">Subjects</a></li>
                <li class="breadcrumb-item" aria-current="page"><a asp-action="StudentListPerSubject" asp-route-classid="@Constants.TeacherNavigation.classid" asp-route-subjectid="@Model.HeadId">Students</a></li>
                <li class="breadcrumb-item active" aria-current="page"><a>Grade Submmission</a></li>
            </ol>
        </nav>
        @if (successValue == 0)
        {
            <div class="alert alert-danger alert-dismissible d-flex align-items-center fade show">
                <i class="bi-exclamation-octagon-fill"></i>
                <strong class="mx-2">Error!</strong>@ViewData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>

        }
        else if (successValue == 1)
        {
            <div class="alert alert-success alert-dismissible d-flex align-items-center fade show">
                <i class="bi-check-circle-fill"></i>
                <strong class="mx-2">Success!</strong>@ViewData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }
        @{
            Constants.ViewDataErrorHandling.Success = -1;
            Constants.ViewDataErrorHandling.ErrorMessage = null;
        }
        <div class="card">
            <div class="card-body">
                <h3>@Model.HeadSubjectName</h3>
                <h4 class="card-title">Child Subject Grades</h4>
                <p class="card-description">
                    When adding a grade, please check before clicking the save button.
                </p>
                <button type="button" id="add"class="btn btn-outline-danger" data-bs-toggle="modal" data-bs-target="#exampleModal">Add Grades</button>
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Subjects</th>
                                <th>1</th>
                                <th>2</th>
                                <th>3</th>
                                <th>4</th>
                                <th>Final</th>
                            </tr>
                        </thead>
                        <tbody>
                           @for(int x =0;x<Model.ChildSubjects.Count;x++)
                            {
                                var subject = Model.ChildSubjects.ElementAt(x);                               
                                <tr>
                                    <td>@subject.Name </td>
                                    @foreach(var grade in Model.GradesContainer.ElementAt(x).Grades)
                                    {
                                        if(grade.Quarter>max)
                                        {
                                            max = grade.Quarter;
                                        }
                                        <td>@grade.Grade <a href="" onclick="updateGrade('@grade.Grade_Id','@Model.StudentId','@subject.subjectId','@grade.Quarter','@grade.Grade','@subject.Name')" data-bs-toggle="modal" data-bs-target="#exampleModal1"><i class="lni lni-pencil"></i></a></td>
                                    }
                                </tr>
                            }
                            <tr>
                                <td>@Model.HeadSubjectName</td>
                                @foreach(var grade in Model.HeadSubjectGrade.Grades)
                                {
                                    <td>@grade.Grade</td>
                                }
                            </tr>
                        </tbody>
                    </table>                   
                </div>              
            </div>
           
        </div>
    </div>
    <!--Modal for adding grades-->
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Add Grades</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                
                @using (Html.BeginForm("AddChildSubjectGrades", "Teacher", FormMethod.Post))
                {
                    <div class="modal-body">
                        <input type="hidden" value="@Model.HeadId" name="headId" />
                        <input type="hidden" value="@Model.StudentId" name="studentId" />
                        <input type="hidden" value="@(max+1)" name="quarter" />
                        @for (int x = 0; x < Model.ChildSubjects.Count; x++)
                        {
                            var subject = Model.ChildSubjects.ElementAt(x);
                            <div class="mb-3">
                                 <label for="recipient-name" class="col-form-label">@subject.Name:</label>
                                 <input type="hidden" value="@subject.subjectId" name="subject" />
                                 <input type="text" class="form-control" id="recipient-name" name="grades" required>
                            </div>
                        }
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-danger">Save Changes</button>
                    </div>
                }                                                                  
            </div>
        </div>
    </div>

    @* Modal For Updating grades *@
    <div class="modal fade" id="exampleModal1" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Update Grade</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                @using (Html.BeginForm("EditChildSubGrade", "Teacher", FormMethod.Post))
                {
                    <div class="modal-body">
                        <input type="hidden" id="gradeid" name="Grade_Id"/>
                        <input type="hidden" id="studentId" name="Student_Id" />
                        <input type="hidden" id="subjectId" name="Subject_Id" />
                        <input type="hidden" id="quarter" name="Quarter" />
                        <input type="hidden" name="headid"  value="@Model.HeadId"/>
                        <div class="mb-3">
                            <label id="subname" for="recipient-name" class="col-form-label">:</label>
                            <input type="text" class="form-control" id="grade" name="Grade" required>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Submit Grade</button>
                    </div>
                }
            </div>
        </div>
    </div>

</div>


<script>
    var button = document.getElementById("add");
    if (@max == 4)
    {
        button.disabled = true;
    }
    function updateGrade(gradeId,studentId,subjectId,quarter,grade,subname)
    {
        document.getElementById("gradeid").value = gradeId;
        document.getElementById("studentId").value = studentId;
        document.getElementById("subjectId").value = subjectId;
        document.getElementById("quarter").value = quarter;
        document.getElementById("grade").value = grade;
        document.getElementById("subname").textContent = subname;
    }
</script>